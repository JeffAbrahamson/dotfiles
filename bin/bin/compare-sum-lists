#!/usr/bin/python

# Take two files generated by something like this
#
#    find ./ -type f -exec sum \{\} \; -print
#
# and output a list of files present not present in both.
# Note that the file format, then, is
#
#    number number
#    name
#
# repeated.

import sys

def read_file(filename):
   """Read a file in the format "number number\nname".

   Return a dictionary that maps name to the double number string.
   """
   mapping = dict()
   line_number = 0
   fp = open(filename, "r")
   value = fp.readline()
   while value:
      line_number += 1
      key = fp.readline()
      line_number += 1
      mapping[key.rstrip()] = value.rstrip()
      value = fp.readline()
   return mapping

def difference(first, second):
   """Print the elements in first changed or absent in second.

   first and second are dicts as returned from read_file().
   Print differences as found."""
   for name, checksum in first.iteritems():
      if name in second:
         if checksum != second[name]:
            print "  Changed: ", name
      else:
         print "  Missing: ", name
      

def main():
   """Do what we do."""
   if len(sys.argv) != 3:
      print "Usage: {0} file1 file2".format(sys.argv[0])
      return 1
   filename1 = sys.argv[1]
   filename2 = sys.argv[2]
   first_map = read_file(filename1)
   second_map = read_file(filename2)
   
   print "{0} - {1}".format(filename1, filename2)
   difference(first_map, second_map)
   print "\n{0} - {1}".format(filename2, filename1)
   difference(second_map, first_map)
   return 0

if __name__ == "__main__":
    main()
