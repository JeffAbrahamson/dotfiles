#!/usr/bin/python


import sys


# Take two files generated by something along the lines of
#
#   $ find path -type f -print0 | xargs -0 sha1sum > my-file
#
# and report which files appear only once and which appear twice but
# have different sha1 checksums.
#
# With third argument dpkg (default is sha1), consider instead the
# format output from dpkg  --get-selections.


def main_sha1(filename_1, filename_2):
    """Compare the output of two files generated along the lines of
    
         $ find path -type f -print0 | xargs -0 sha1sum > my-file

       and report which files appear only once and which appear twice
       but have different sha1 checksums
    """
    d = dict()
    for filename in [filename_1, filename_2]:
        fp = open(filename, "r")
        line = fp.readline()
        while line:
            line = line.strip()
            [hash, middle, filename] = line.partition(" ")
            if(filename in d):
                d[filename].append(hash)
            else:
                d[filename] = [hash]
            line = fp.readline()
        fp.close()

    one = []
    two_same = []
    two_diff = []
    error = []
    for k_filename, v_hashes in d.items():
        num_hashes = len(v_hashes)
        if 1 == num_hashes:
            one.append(k_filename)
        else:
            if(2 == num_hashes):
                if(v_hashes[0] == v_hashes[1]):
                    two_same.append(k_filename)
                else:
                    two_diff.append(k_filename)
            else:
                error.append(k_filename)
    print "same     =", len(two_same)
    print "different=", len(two_diff)
    print "one only =", len(one)
    print "errors   =", len(error)

    print
    print "Only once:"
    for k in one:
        print "  ", k
    print "Different:"
    for k in two_diff:
        print "  ", k


def main_dpkg(this_filename, filenames):
    """Compare the output of two or more files generated along the
       lines of
    
         $ dpkg  --get-selections > my-file

       and report which packages are present in one of the files
       of filenames but not in this_filename.
    """
    d = dict()
    fp = open(this_filename, "r")
    line = fp.readline()
    while line:
        line = line.strip()
        [pkg_name, middle, rest] = line.partition("\t")
        d[pkg_name] = 1
        line = fp.readline()
    fp.close()

    ds = dict()
    for filename in filenames:
        fp = open(filename, "r")
        line = fp.readline()
        while line:
            line = line.strip()
            [pkg_name, middle, rest] = line.partition("\t")
            ds[pkg_name] = 1
            line = fp.readline()
        fp.close()

    for k_pkg, v_dummy in ds.items():
        if(k_pkg not in d):
            print k_pkg
    

def usage():
    print "Usage: %s <file1> <file2> sha1|dpkg" % sys.argv[0]
    print "       %s <file1> <file2> <file3> ...  (assumes option dpkg)" %sys.argv[0]
    

if(len(sys.argv) < 4):
    usage()
elif("sha1" == sys.argv[3]):
    main_sha1(sys.argv[1], sys.argv[2])
elif("sha1" == sys.argv[3]):
    main_dpkg(sys.argv[1], sys.argv[2])
else:
    main_dpkg(sys.argv[1], sys.argv[2:])
