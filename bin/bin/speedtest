#!/bin/bash

# Analysis is more convenient if all times that we think of as the
# same are the same.  So we avoid time skew by picking the script's
# start time rather than several times during its very short run.
now=$(date +%s)
host_shortname=$(hostname -s)

# Write time and value $1 to datafile $2.
record_value()
{
    echo $now "$1" >> "$HOME/data/hosts/$host_shortname/speedtest-$2"
}

main()
{
    outfile=/tmp/speedtest_$$.out
    /bin/rm -f $outfile
    $HOME/bin/speedtest.py --simple > $outfile
    if [ "0" == "$?" ]; then
	ping=$(cat $outfile | awk '/Ping/ {print $2}')
	download=$(cat $outfile | awk /'Download/ {print $2}')
	upload=$(cat $outfile | awk '/Upload/ {print $2}')
	ssid=$(/sbin/iwgetid -r 2>> /tmp/iwgetid.log || echo 'unknown-ssid')

	if [ "$Xping" != X ]; then
	    record_value $ping ping
	    record_value $download download
	    record_value $upload upload
	    record_value "$ssid" ssid
	else
	    fail_log=/tmp/speedtest-failure-log
	    date >> $fail_log
	    cat $outfile >> $fail_log
	    record_value 1 failure
	fi
    else
	record_value 1 failure
    fi
    /bin/rm -f $outfile
}

main
