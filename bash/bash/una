###########################################################################
# UNA compta

# Probably these should go through python (pandas) just so that I can
# canonicalise the date format between EBP versions.  I would do that
# in the preprocess.sh scripts in
# $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/

# Trouver compte par numéro.
unacc() {
    una_base="$HOME/work/UNA/comite-directeur/trésorier/"
    grep -i "$1" "$una_base/ebp-compta-exports/EBP.EDI-accounts" | \
        sort;
}

unace() {
    una_base="$HOME/work/UNA/comite-directeur/trésorier/"
    grep -i "$1" "$una_base/ebp-compta-exports/export.txt-entries" | \
        sort;
}

## The same functions but looking at historical data as well as current.

ounacc ()
{
    (
        una_base="$HOME/work/UNA/comite-directeur/trésorier/"
        cd $una_base/ebp-compta-exports/;
        grep --no-filename -i "$1" \
             previous_year_exports/EBP*.EDI-accounts \
             EBP.EDI-accounts | \
            sort -u
    )
}

ounace ()
{
    (
        cd $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/;
        grep --no-filename -i "$1" \
             previous_year_exports/20*.txt-entries \
             export.txt-entries | \
            sort;
    )
}

# Some reporting examples.

# ebp_exemple_moteur()
# {
#     grep --color=auto --no-filename -iE "^E;" $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/previous_year_exports/EBP*.EDI | \
#       awk -F';' 'index($2, "401") != 0 && (index($7, "moteur") != 0 || index($7, "Yamaha") != 0) && $8 == "C" \
#             {printf("%-10s | %04d-%02d-%02d | %-40s | %10.2f € |\n",
#               $2, substr($3, 5, 4), substr($3, 3, 2), substr($3, 1, 2), $7, $9);
#              years[substr($3, 5, 4)] += $9;
#             }
#             END {
#               for (y in years) printf("  %s: %10.2f €\n", y, years[y]);
#             }'
# }

# Example report showing detail and year-by-year sums of all
# transactions on accounts beginning 401 involving either "moteur" or
# "Yamaha".
una-exemple-moteur()
{
    cat $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/previous_year_exports/20*.txt | \
        sort -u | \
        tr -d '"' | \
        awk -F';' 'index($2, "401") != 0 && (index($10, "moteur") != 0 || index($10, "Yamaha") != 0) && $12 > 0 \
            {printf("%-10s | %04d-%02d-%02d | %-40s | %10.2f € |\n",
              $2, substr($3, 7, 4), substr($3, 4, 2), substr($3, 1, 2), $10, $12);
             years[substr($3, 7, 4)] += $12;
            }
            END {
              for (y in years) printf("  %s: %10.2f €\n", y, years[y]);
            }'
}

# ebp-sum-account()
# {
#     grep --color=auto --no-filename -iE "^E;" $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/EBP.EDI | \
#       awk -F';' -v account=$1 '$2 == account { sums[$8] += $9; } \
#                                  END { printf("%-12s | débit=%10.2f | crédit=%10.2f\n", \
#                                        account, sums["D"], sums["C"]); }';
# }

una-sum-account()
{
    cat $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/export.txt | \
        sort -u | \
        tr -d '"' | \
        awk -F';' -v account=$1 '$5 == account { sums[$15] += $13; } \
                                 END { printf("%-12s | débit=%10.2f | crédit=%10.2f | solde=%10.2f\n", \
                                       account, sums["D"], sums["C"], sums["D"] + sums["C"]); }';
}

una-balances()
{
    # $5 == account.
    # $13 == amount.
    # $15 == C or D.
    cat $HOME/work/UNA/comite-directeur/trésorier/ebp-compta-exports/export.txt | \
        sort -u | \
        tr -d '"' | \
        awk -F';' '
        {
            sums[$5][$15] += $13;
        }
        END { for (account in sums) {
            printf("%-12s | débit=%10.2f | crédit=%10.2f | solde=%10.2f\n",
                   account, sums[account]["D"], sums[account]["C"],
                   sums[account]["D"] + sums[account]["C"]);
            }
        }' | sort -n;
}

# To help with helloasso.
ha-rename() {
    src_filename="$1"
    dst_filename=$(echo "$src_filename" | sed -Ee 's/^export-//; s/-[0-9]{2}_[0-9]{2}_[0-9]{4}+//; s/(^.*)-([0-9][0-9])_([0-9]{2})_([0-9]{4}).csv$/\4\3\2-\1.csv/;')
    mv "$src_filename" "$dst_filename"
}

ha-stats4() {
    csv_file="$1"
    # Field $4 is the amount for billetrie.
    # For gifts it is $6.
    # So fix that here.
    tail +2 "$csv_file" | awk -F';' '{sum += $4}
                                     END {printf("%.2f € collected, %d contributers\n",
                                                 sum, NR); }'
}

ha-stats6() {
    csv_file="$1"
    # Duplicate...
    tail +2 "$csv_file" | awk -F';' '{sum += $6}
                                     END {printf("%.2f € collected, %d contributers\n",
                                                 sum, NR); }'
}

# Textiles et autres billeterie.
ha-billeterie() {
    csv_file="$1"
    # Champs :
    #  1  - numéro
    #  3  - formule (un peu longue...)
    #  4  - montant
    #  8  - prénom
    #  7  - nom
    #  10 - date
    #  11 - email
    formule_len=$(tail +2 "$csv_file" | \
        awk -F';' '{ len3 = (len3 > length($3) ? len3 : length($3)); } END { print len3; }')
    tail +2 "$csv_file" | \
        awk -F';' -v len3=$formule_len '
	    BEGIN {
	        fmt = sprintf("%%3d | %%-%ds | %%5.2f € | %%-24s | %%10s | %%15s \n", len3);
	    }
	    {
	        printf(fmt, $1, $3, $4, $8 " " $7, substr($10, 1, length($10) - 3), $11);
	    }'
}

# Adhésion.
ha-adhésions() {
    csv_file="$1"
    # Champs :
    #  1  - numéro
    #  2  - formule (un peu longue)
    #  3  - montant
    #  7  - prénom
    #  8  - nom
    #  9  - date
    #  10 - mél
    formule_len=$(tail +2 "$csv_file" | \
        awk -F';' '{ len2 = (len2 > length($2) ? len2 : length($2)); } END { print len2; }')
    tail +2 "$csv_file" | \
        awk -F';'  -v len2=$formule_len '
	    BEGIN {
	        fmt = sprintf("%%3d | %%-%ds | %%15s | %%5.2f € | %%-26s | %%10s | %%15s \n", len2);
		print(fmt);
	    }
	    {
	        printf(fmt, $1, $2, $3, $5, $7 " " $6, substr($9, 1, length($9) - 3), $10);
	    }'
}
