alias which="type -path"

case "X$TERM" in
    "Xxterm") alias ls="/bin/ls -F --color=auto"
esac
alias ll="ls -l"
alias la="ls -a"
alias lf="ls -F"
alias lr="ls -R"
alias lth="ls -lt|head"
alias ltm="ls -lt|more"
alias ltl="ls -lt|less"    # Effectively the same thing
alias mv="mv -i"
alias cp="cp -i"

alias h="history"
alias hg="history | grep"
ht() { history | tail -20; }
msw() { catdoc $1 | tr '\r' '\n'; }

alias ag="alias | grep"
alias eg="env | grep"

p() { pwd; }
alias ..="cd .."
alias m="less"
alias pg="ps ax | grep"
j() { jobs; }

alias mk="make"
mcm() { make clean; make; }

ec() { emacsclient -n $*; }

ssh-mult() { echo ssh; (cd $HOME/.ssh/; ssh-add id_rsa id_rsa.drexel id_rsa.github id_rsa.vu;) ; }

if [ -f $HOME/.dotfiles/bash/rsync ]; then
   . $HOME/.dotfiles/bash/rsync
fi

if [ -f $HOME/.dotfiles/bash/pictools ]; then
   . $HOME/.dotfiles/bash/pictools
fi

apt-refresh() {
    sudo apt-get update && \
	sudo apt-get upgrade -y && \
	sudo apt-get dist-upgrade -y && \
	sudo apt-get autoremove -y;
}

###########################################################################
# ssh login

tux() { xrlogin $tux; }
php() { ssh -X purple@blog.purple.com; }

mirror-slow() { wget --wait=30 --random-wait --no-host-directories --convert-links --mirror --no-parent $1; }
mirror() { wget --wait=10 --random-wait --no-host-directories --convert-links --mirror --no-parent $1; }
mirror-fast() { echo fast mirror; wget --no-host-directories --convert-links --mirror --no-parent $1; }
get-music() { wget -nH -nd -r -N -l 1 --accept=.ogg,.mp3 $1; }


cf-mv() { if [ "X$1" != "X" ]; then tmp=cflash_$$-$1 && mkdir $tmp && cd $tmp; fi; \
    /bin/mv -i $cflash/* . && \
    chmod -x *; }
cf-cp() { if [ "X$1" != "X" ]; then tmp=cflash_$$-$1 && mkdir $tmp && cd $tmp; fi; \
    /bin/cp -i --preserve=timestamps $cflash/* . && \
    chmod -x *; }

## Typical usage:
##   {,u}mnt-android /usb
## It may be that mtpfs would work as well as jmtpfs.
## The day I tested, jmtpfs was substantially faster.
mnt-android() { sudo jmtpfs -o allow_other "$1"; }
umnt-android() { sudo fusermount -u "$1"; }

rmthisdir() { p_=`pwd`; b_=`basename $p_`; cd ..; /bin/rmdir $b_; unset p_ b_; }

undup() { if [ $# != 2 ]; then echo Usage: undup dir1 dir2; return; fi
    dir1=$1; dir2=$2;
    for f in "$dir1"/*.jpg "$dir1"/*.JPG; do
	b=$(basename "$f")
	if ( cmp -s "$f" "$dir2/$b") ; then
	    # Files are the same
	    echo cmp "$f" "$dir2/$b"
	    echo rm $f
	fi
    done; }

google() { w3m lynx http://www.google.com/; }
citeseer() { w3m http://citeseer.nj.nec.com/cs; }
jeff() { w3m http://localhost/~jeff/purple/jeff/private/jeff.html; }
xjeff() { gnome-terminal --hide-menubar --disable-factory --geometry=90x60 --window-with-profile=w3m; }

###########################################################################
# gpg

gpg-update-keys() { gpg --recv-keys `gpg --list-keys|grep pub|awk '{print $2}'|awk -F/ '{print $2}'`; }
gpg-update-sigs() { gpg --recv-keys `gpg --list-sigs $1|grep sig|cut -c 12-20|sort -u`; }
signed-me-verbose() { gpg --list-sigs |egrep '(^pub|jeff@purple.com)'| perl -wne 'my $last_line = ""; while(my $line = <>) { if($line !~ /^pub/) { print $last_line; print $line; } $last_line = $line; }'; }
signed-me() { gpg --list-sigs |egrep '(^pub|jeff@purple.com)'| perl -wne 'my $last_line = ""; while(my $line = <>) { if($line !~ /^pub/ and $last_line =~ /^pub/) { print $last_line; } $last_line = $line; }'; }

view-urls-by-file() {
    first_window=true;
    for p in $(egrep -v '^#' $1); do 
	if( $first_window ); then
	    $www_browser --new-window "$p"; 
	    first_window=false;
	else
	    $www_browser "$p"; 
	fi
    done;
    unset first_window
}
morning() {
    view-urls-by-file $HOME/data/morning-web
    (
    #birthdays;
    #pilot-agenda;
    cat $HOME/common/data/to-do.txt | egrep -v '^#';
    ) | more
}
afternoon() { 
    view-urls-by-file $HOME/data/afternoon-web
    (
    cat $HOME/common/data/to-do.txt | egrep -v '^#';
    ) | more
}

###########################################################################
# Pictures

gq-slideshow() {
    if [ $# -gt 0 ]; then
	images=$*
    elif [ -e laptop ]; then
	images=laptop/*.jpg
    else
	images=*.jpg
    fi
    geeqie $images --remote --slideshow-start --fullscreen-start --delay=1
}
gqselect() { wc -l $1; geeqie --remote file $(cat $1) 2>/dev/null; }
gq() { geeqie --remote file $* 2>/dev/null; }
gq-make-laptop() {
    if [ ! -d laptop ]; then mkdir laptop; fi
    for f in *jpg; do if [ ! -e laptop/$f ]; then echo $f; convert -geometry 1366x768 $f laptop/$f; fi; done
}

###########################################################################
# MOOC

mooc() {
    for f in *mp4; do
	mplayer "$f"
	echo -n "Delete '$f'? "
	read x
	if [ "X$x" = X -o "X$x" = Xy -o "X$x" = yes ]; then
	    rm "$f"
	else
	    echo Not removing.
	fi
    done
}

###########################################################################

checksum() { find . -type f -exec sha1sum \{\} \; ; }

separator() { echo ======================================================================; }


## Bulk-converting ogg-vorbis to mp3:
# d=...
# for f in $(find . -name '*ogg'); do
#     b=$(basename $f .ogg);
#     ffmpeg -i $f ~/to-nantes/$d/$b.mp3;
# done

###########################################################################
# ssh

## To compute ssh host key fingerprints:
# ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key
# ssh-keygen -l -f /etc/ssh/ssh_host_dsa_key

ssh-new() { unset SSH_AGENT_PID; unset SSH_AUTH_SOCK; exec ssh-agent bash; }
ssh-github() { ssh-add ~/.ssh/id_rsa.github; }
ssh-jelly() { ssh-add ~/.ssh/id_rsa.jellybooks; }

data-notes() {
    cd $HOME/common/work/employment/Goldman-Sachs/data-notes/;
    tr 'n-za-mN-ZA-M5-90-4' 'a-zA-Z0-9' < /tmp/gs.tgz | uudecode;
    tar xzf gs.tgz;
    rm gs.tgz;
};

todo() {
    # This assumes $1 is a number or doesn't exist.
    _tag==$(printf "=%.0s" $(seq 1 ${1:-1}))
    grep $_tag $HOME/data/org/TODO | perl -pwe "s/$_tag$//;";
    unset _tag
}

internet() {
    in_out=$(ifconfig wlan0 | grep bytes | perl -pwe 's/^.*:([0-9]+).*:([0-9]+).*$/$1 $2/;');
    RX_old=$(echo $in_out | awk '{print $1}');
    TX_old=$(echo $in_out | awk '{print $2}');
    sleep 10
    in_out=$(ifconfig wlan0 | grep bytes | perl -pwe 's/^.*:([0-9]+).*:([0-9]+).*$/$1 $2/;');
    RX_new=$(echo $in_out | awk '{print $1}');
    TX_new=$(echo $in_out | awk '{print $2}');
    echo RX: $((6 * (RX_new - $RX_old) )) bytes/minute;
    echo TX: $((6 * (TX_new - $TX_old) )) bytes/minute;
}
cppdoc() { ff $HOME/work/c++-docs/cpp.html & }

#workm-periodic() { while true; do date; workm force-put; sleep 900; separator; done; }
#workm-push() { workm force-put; }
srd-here() { srd "$*" -g "$(hostname)"; }
tsd-last() { tsd $1 $(tsd $1 | tail -1 | awk '{print $2}'); }

rpass() { head -c $((500 + $RANDOM)) < /dev/urandom | sha1sum; }
voyages() { gnumeric $HOME/work/finance/France/impots/$(date '+%Y')/voyages.gnumeric & }
cheque() { gnumeric $HOME/data/chequier.gnumeric & }
house() { gnumeric $HOME/common/work/financial/real_estate/Nantes/Metzinger/costs.gnumeric & }
snap() { scrot -s; }
term() { terminator -b -m & }
recipes() { case "X$HOSTNAME" in
    Xlondon|Xsiegfried) file=$HOME/src/jma/recipes/pdf/recipes-gs3.pdf;;
    Xlorax|Xnantes) file=$HOME/src/jma/recipes/pdf/recipes-laptop.pdf;;
    esac
    evince $file &
}

pm() { ogg=$(/bin/ls *ogg */*ogg 2>/dev/null); mp3=$(/bin/ls *mp3 */*mp3 2>/dev/null); if [ "x$ogg" != x ]; then ogg123 $ogg; fi; if [ "x$mp3" != x ]; then mpg123 $mp3; fi; unset mp3; unset ogg; }
secu() { gnumeric $HOME/data/secu.gnumeric & }
script() { SCRIPT_NAME="$1" /usr/bin/script "$@"; }
fr() {
    if [ $# -gt 0 ]; then
     	echo "$*" >> $HOME/work/notes/french-learning.txt;
    else
	more $HOME/work/notes/french-learning.txt;
    fi
}
note() { ec $HOME/data/notes/$1; }
notegr() { grep $1 $HOME/data/notes/$1; }

###########################################################################
# git

git-log-graph() { git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit; }
git-log-terse() { git log --pretty=format:"%ad%x09%an%x09%s" --date=short; }
git-log-table() { git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|' | less -r; }
# git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
# git lg
# git lg -p

###########################################################################
# gtd

gtd() { if [ "X$1" = X ]; then
    echo "What?"; else
    echo $(date +%s) "$1" >> $HOME/data/gtd/gtd_$(hostname); fi; }
gtdq() { cat $HOME/data/gtd/gtd_* | awk '{print $2}' | sort -u; }
gtdnow() { tail -1 $HOME/data/gtd/gtd_$(hostname); }

###########################################################################
# Utilities

## Time-date conversion, because I forget the flags
# Print current date as seconds since the epoch
d2t() { date +%s; }
# Translate epoch to human time
t2d() { date -d @$1 -R; }

fs-mount() {
    if [ $(ls $HOME/fs | wc -l) -gt 1 ]; then
	echo fs is already mounted.
    else
	(cd; sshfs jeff@fileserver:/d2/jeff fs)
    fi
}
fs-umount() { (cd; fusermount -u fs) }

# Serve the current directory on port 8000.
http() { python -m SimpleHTTPServer; }
serve-this() {
    dir=$(mktemp -d /tmp/serve-this-XXXXX)
    cp -r $* $dir/
    ( (sleep 600; /bin/rm -rf $dir/)& )&
    (cd $dir; http)
}

gf() { (cd "$HOME/data/hosts"; grep --no-filename "$1" */files.txt) }

###########################################################################
# python

# Shortcut for activating my virtual environments.
alias activate=". venv/bin/activate"

###########################################################################
# docker
nse() {
    pid=$(sudo docker inspect --format {{.State.Pid}} $1);
    echo $pid;
    sudo nsenter --target $pid --mount --uts --ipc --net --pid;
}

###########################################################################
# X / ratpoison / i3

sndq() { amixer scontrols; }
snddn() { amixer -D pulse set Master 5%-; }
sndup() { amixer -D pulse set Master 5%+; }
sndmute() { amixer -D pulse set Master toggle; }

undisp() { if [ $DISPLAY ]; then DISPLAY_WAS="$DISPLAY"; unset DISPLAY; fi; }
redisp() {
    if [ "X$DISPLAY" = X ]; then
	DISPLAY=$DISPLAY_WAS xwininfo -root >/dev/null 2>/dev/null
	if [ 0 = $? ]; then
	    export DISPLAY="$DISPLAY_WAS";
	else
	    echo Previous DISPLAY $DISPLAY_WAS is no longer valid.
	fi
    else
	echo DISPLAY is already set.
    fi;
}

###########################################################################
# Silence glibc asserts.

alias evince="evince 2>/dev/null"

