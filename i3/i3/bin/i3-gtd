#!/bin/bash

PATH=/usr/bin:/bin
renice -n 19 $$

GTD_DIR=$HOME/data/gtd
GTD_IMG_DIR=$HOME/data/gtd-img

i3_pid=$(pidof i3)
task_file=
lock_minutes=
while true; do
    ## When I3 exits, this script should quit as well.  I'm not sure
    ## if I need this or not.  So watch for i3 exit and quit when
    ## no longer needed.
    if [ ! -e /proc/$i3_pid ]; then
	exit 0
    fi
    if pidof i3lock >/dev/null; then
	# If I (the human) go away, then start a new task file.
	#
	# That is, test to see if the screen is locked.  This test
	# only works if I'm manually locking my screen or if locked by
	# xautolock, but would fail if I ran i3lock as a daemon.
	task_file=
	if [ "X$lock_minutes" = X ]; then
	    # Only set once per absence.
	    lock_minutes=$(( $(date +%s) / 60))
	fi
    else
	if [ "X$task_file" = X ]; then
	    task_file=$GTD_DIR/$(hostname)__$(date +%F_%H%M%S)
	    if [ "X$lock_minutes" != X ]; then
		# Only report on return.
		now_minutes=$(( $(date +%s) / 60))
		lock_duration_minutes=$(($now_minutes - $lock_minutes))
		notify-send "Welcome back" "It's been $lock_duration_minutes minutes."
		lock_minutes=
	    fi
	fi
	id=$(xprop -root |  awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')
	task=$(xprop -id $id | awk '/_NET_WM_NAME/{$1=$2="";print}' | cut -d'"' -f2)
	echo $(date +%s) $task >> $task_file

	# ## Also capture an image of the active window.
	# ## Suggestion by Hugo Mougard, 2016-10-05.
	# # We reduce image size.  At 150x150, images are over 20 KB.
	# # At 100x100, imges are about 10-20 KB.  At 10 KB per image,
	# # snapping once per minute, this stores 5 GB per year.  At 20
	# # KB (10*60*24*365/1024), that's 10 GB per year.
	# hostname=$(hostname)
	# time_base=$(date +%s)
	# time_component=$(echo $time_base | perl -pwe 's/[0-9]{5}$//;')
	# gtd_dir="$GTD_IMG_DIR/$hostname/$time_component"
	# if [ ! -d $gtd_dir ]; then
	#     mkdir -p $gtd_dir
	# fi
	# scrot --focused "$GTD_IMG_DIR/gtd-img-%s.png" \
	#       -e "convert -geometry 100x100 \$f $gtd_dir/${hostname}_${time_base}.png; chmod 400 $gtd_dir/${hostname}_${time_base}.png; rm \$f"
    fi
    sleep 60
done
