#!/bin/bash

PATH=/usr/bin:/bin

# Log what we do lest it be mysterious.
LOG="/tmp/${LOGNAME:-root}-lid-monitor.log"

log()
{
    now=$(date "+%F %T")
    echo "$now    $*" >> $LOG
}

usage()
{
    msg="Usage: ratpoison-lid-monitor (daemon|once) (lock|suspend)"
    echo "$msg"
    log "$msg"
}

# First argument "daemon" means to loop.
# First argument "once" means to run once.
# Any other value is an error.
if [ "X$1" = Xdaemon ]; then
    loop=1
elif [ "X$1" = Xonce ]; then
    loop=0
else
    usage
    exit 1
fi

# To suspend, we must be root.
# To lock the screen, it is far simpler to be the user running ratpoison.
if [ "X$2" != Xsuspend -a "X$2" != Xlock ]; then
    usage
    exit 2
fi
action="$2"

check_lid()
{
    # On one version of ubuntu, the file is LID, on another it's LID0.
    # In both cases, only one file lives under /proc/acpi/button/lid/.
    # Since this only needs to work for me, just glob and move on.
    state=$(cat /proc/acpi/button/lid/LID*/state | grep state | awk '{print $2}')
    if [ "X$state" = Xclosed ]; then
	if [ "X$action" = Xlock ]; then
	    log "$0 locking screen."
	    gnome-screensaver-command --lock
	fi
	if [ "X$action" = Xsuspend ]; then
	    log "$0 suspending."
	    /usr/sbin/pm-suspend
	fi
    fi
}

main()
{
    if [ $loop = 1 ]; then
        ## When ratpoison exits, this script should quit as well.  But
        ## ratpoison's exec seems to do a nice job of leaving us as a
        ## daemon.  So watch for ratpoison exit and quit when no
        ## longer needed.
	rp_pid=$(pidof ratpoison)
	while true; do
	    check_lid
	    sleep 1
	    if [ ! -e /proc/$rp_pid ]; then
		return
	    fi
	done
    else
	check_lid
    fi
}

main
